var k=Object.defineProperty;var T=(o,t,e)=>t in o?k(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e;var s=(o,t,e)=>(T(o,typeof t!="symbol"?t+"":t,e),e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))i(n);new MutationObserver(n=>{for(const r of n)if(r.type==="childList")for(const h of r.addedNodes)h.tagName==="LINK"&&h.rel==="modulepreload"&&i(h)}).observe(document,{childList:!0,subtree:!0});function e(n){const r={};return n.integrity&&(r.integrity=n.integrity),n.referrerPolicy&&(r.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?r.credentials="include":n.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function i(n){if(n.ep)return;n.ep=!0;const r=e(n);fetch(n.href,r)}})();class d{constructor(t,e){s(this,"_x",0);s(this,"_y",0);if(typeof t=="object"){const{x:i,y:n}=t;this._x=i,this._y=n;return}t&&(this._x=t),e&&(this._y=e)}get x(){return this._x}get y(){return this._y}getCoords(){return{x:this.x,y:this.y}}setCoords(t,e){this._x=t,this._y=e}setX(t){this._x=t}setY(t){this._y=t}addX(t){this._x+=t}addY(t){this._y+=t}subtractX(t){this._x-=t}subtractY(t){this._y-=t}}class C{constructor(t){s(this,"_minX");s(this,"_maxY");s(this,"_maxX");s(this,"_minY");this._minX=t.minX,this._maxX=t.maxX,this._minY=t.minY,this._maxY=t.maxY}get minX(){return this._minX}get maxX(){return this._maxX}get minY(){return this._minY}get maxY(){return this._maxY}setBounds(t){const{maxX:e,maxY:i,minX:n,minY:r}=t;this._maxX=e,this._maxY=i,this._minX=n,this._minY=r}}class O{constructor(t){s(this,"position",new d);s(this,"viewBounds");s(this,"deadZone",null);s(this,"_trackedEntity",null);s(this,"scale",1);this.viewBounds=new C(t.viewBounds),t.deadZone&&(this.deadZone=new C(t.deadZone))}get trackedEntity(){return this._trackedEntity}get centerCameraCoordinates(){return this.getCameraCenterByCoords(this.position)}setViewBounds(t){this.viewBounds.setBounds(t)}setDeadZone(t){t&&(this.deadZone?this.deadZone.setBounds(t):this.deadZone=new C(t)),t===null&&(this.deadZone=null)}trackEntity(t){this._trackedEntity=t;const e=t.position.x-this.viewBounds.maxX/2+t.width/2,i=t.position.y-this.viewBounds.maxY/2+t.height/2;this.position.setCoords(e,i)}untrackEntity(){this._trackedEntity=null}update(t){this._trackedEntity&&this.centerOnTrackedEntity(t),this.deadZone&&this.position.x+this.viewBounds.maxX>this.deadZone.maxX&&this.position.setX(this.deadZone.maxX-this.viewBounds.maxX),this.deadZone&&this.position.x<this.deadZone.minX&&this.position.setX(this.deadZone.minX)}centerOnTrackedEntity(t){const e=this._trackedEntity.position.x+this._trackedEntity.width/2-t.canvas.width/2,i=this._trackedEntity.position.y+this._trackedEntity.height/2-t.canvas.height/2;this.position.setCoords(e,i)}setCoordinates(t){const{x:e,y:i}=t;this.position.setCoords(e,i)}getCameraCenterByCoords(t){const e=t.x+this.viewBounds.maxX/2,i=t.y+this.viewBounds.maxY/2;return{x:e,y:i}}moveTo(t){this.setCoordinates(t)}applyTransform(t){t.scale(this.scale,this.scale)}resetTransform(t){t.setTransform(1,0,0,1,0,0)}zoomIn(){this.scale*=1.0005}zoomOut(){this.scale/=1.1}}class F{constructor(t){s(this,"image");s(this,"_frameWidth");s(this,"_frameHeight");s(this,"_uniqueName");s(this,"_elapsedTime",0);s(this,"_interval",16);s(this,"_frameIndex",0);s(this,"_row",0);s(this,"_col",0);s(this,"_numberOfRows");s(this,"_numberOfColumns");s(this,"_numberOfFrames");s(this,"_isFlipped",!1);if(!t.img)throw new Error("`img` argument is not provided in Sprite constructor!");if(t.img instanceof HTMLImageElement){if(!t.img.src)throw new Error("Sprite source is not provided!");this.image=t.img}this._frameHeight=t.frameHeight,this._frameWidth=t.frameWidth,this._uniqueName=t.uniqueName,t.interval&&(this._interval=t.interval),this._numberOfFrames=t.numberOfFrames,this._numberOfRows=t.numberOfRows,this._numberOfColumns=t.numberOfColumns}get frameWidth(){return this._frameWidth}get frameHeight(){return this._frameHeight}get uniqueName(){return this._uniqueName}get elapsedTime(){return this._elapsedTime}get interval(){return this._interval}get frameIndex(){return this._frameIndex}get row(){return this._row}get col(){return this._col}get numberOfRows(){return this._numberOfRows}get numberOfColumns(){return this._numberOfColumns}get numberOfFrames(){return this._numberOfFrames}get isFlipped(){return this._isFlipped}update(t){this._elapsedTime+=t.dt,this._elapsedTime>=this._interval&&(this._col++,this._frameIndex++,this._elapsedTime=0,this._col>this._numberOfColumns-1&&(this._row++,this._col=0),this._row>this._numberOfRows-1&&(this._row=0),this._frameIndex>=this._numberOfFrames&&(this._col=0,this._row=0,this._frameIndex=0))}flip(t){this._isFlipped=t}render(t,e){t.save(),this._isFlipped&&t.scale(-1,1);const i=this._frameWidth*this._col,n=this._frameHeight*this._row,r=this._frameWidth,h=this._frameHeight,c=this._isFlipped?-e.coordinatesForRender.x-e.width:e.coordinatesForRender.x,l=e.coordinatesForRender.y,u=e.width,f=e.height;t.drawImage(this.image,i,n,r,h,c,l,u,f),t.restore()}}class X{constructor(t){s(this,"list",new Map);t&&(this.list=t)}addSprite(t,e){if(this.list.has(e))throw new Error("Sprite "+e+" already exist!");if(typeof t=="string"){const i=new Image;i.src=t,this.list.set(e,i)}else if(t instanceof Image){if(!t.src)throw new Error("Sprite source is not provided!");this.list.set(e,t)}}getSprite(t){const e=this.list.get(t);if(!e)throw new Error("Sprite with name "+t+" is not found!");return e}}const _=class _{constructor(t){s(this,"_id");s(this,"position",new d);s(this,"_scene",null);s(this,"width",0);s(this,"height",0);s(this,"sprite",null);s(this,"_update",null);s(this,"_render",null);var e,i;_.ENTITIES_COUNT+=1,this._id=`entity_${_.ENTITIES_COUNT}`,t&&(t.initialPosition&&(this.position=new d((e=t.initialPosition)==null?void 0:e.x,(i=t.initialPosition)==null?void 0:i.y)),t.width&&(this.width=t.width),t.height&&(this.height=t.height),t.update&&(this._update=t.update),t.render&&(this._render=t.render),t.sprite&&(this.sprite=t.sprite))}get scene(){return this._scene}get id(){return this._id}get coordinatesForRender(){const t=this.position.x-this._scene.camera.position.x,e=this.position.y-this._scene.camera.position.y;return{x:t,y:e}}setScene(t){this._scene=t}setSprite(t,e){if(!this.scene)throw new Error("Scene is not defined for entity "+this.id);const i=this.scene.spriteList.getSprite(t);this.sprite=new F({...e,img:i})}get sides(){const t=this.position.y,e=this.position.y+this.height,i=this.position.x,n=this.position.x+this.width;return{top:t,bottom:e,left:i,right:n}}checkCollision(t){if(t.id===this.id)return!1;const e=t.sides,i=this.sides;return e.left<i.right&&e.right>i.left&&e.top<i.bottom&&e.bottom>i.top}};s(_,"ENTITIES_COUNT",0);let y=_;class Y{constructor(){s(this,"_entities");s(this,"scene",null);this._entities=new Map}get list(){return this._entities}addEntity(t){t.setScene(this.scene),this._entities.set(t.id,t)}getAllEntities(){return Array.from(this._entities.values())}getEntityById(t){const e=this._entities.get(t);return e||null}}const g=class g{constructor(t,e){s(this,"_entities");s(this,"_id");s(this,"ctx",null);s(this,"RAFid",null);s(this,"_timer");s(this,"_camera");s(this,"_physics");s(this,"spriteList");s(this,"_showFPS",!1);const i=new Y;i.scene=this,this._entities=i,this._timer=new L,this._physics=new I,this.spriteList=new X(e==null?void 0:e.initialSprites),this._id=`scene_${g.CREATED_SCENES_COUNT}`,g.CREATED_SCENES_COUNT+=1,this._camera=new O({viewBounds:{maxX:t.width,maxY:t.height,minX:0,minY:0}})}get physics(){return this._physics}get camera(){return this._camera}get timer(){return this._timer}get id(){return this._id}get entities(){return this._entities}drawBackground(t){t.clearRect(0,0,t.canvas.width,t.canvas.height)}renderFPS(t){if(this._showFPS){t.fillStyle="yellow",t.strokeStyle="black";const e=this._timer.fps+" FPS";t.font="bold 24px arial",t.textAlign="left",t.textBaseline="top",t.fillText(e,0,0),t.strokeText(e,0,0)}}render(t){t.save(),this.camera.applyTransform(t),this.drawBackground(t),this._entities.list.forEach(e=>e.render(t)),this.camera.resetTransform(t),this.renderFPS(t),t.restore()}update(){this._entities.list.forEach(t=>t.update(this._timer)),this.camera.update(this.ctx)}gameLoop(){this._timer.update(),this.update(),this.render(this.ctx),this.RAFid=window.requestAnimationFrame(this.gameLoop.bind(this))}play(){if(!this.ctx)throw new Error("Canvas rendering context is not defined for scene: "+this.id);this.gameLoop()}stop(){this.RAFid&&window.cancelAnimationFrame(this.RAFid)}showFPS(t){this._showFPS=t}};s(g,"CREATED_SCENES_COUNT",0);let p=g;class I{constructor(){s(this,"_worldGravity",9.8)}get worldGravity(){return this._worldGravity}setGravity(t){this._worldGravity=t}}class R{constructor(){s(this,"_scenes");s(this,"_currentScene",null);s(this,"ctx",null);this._scenes=[]}get currentScene(){return this._currentScene}get list(){return this._scenes}addScene(t){t.ctx=this.ctx,this._scenes.push(t)}changeCurrentScene(t){var e,i;if(typeof t=="string"){const n=this._scenes.find(r=>r.id===t);if(!n)throw new Error("Cannot find scene with id "+t);(e=this._currentScene)==null||e.stop(),this._currentScene=n}else t instanceof p&&((i=this._currentScene)==null||i.stop(),this._currentScene=t)}}class W{constructor(t){s(this,"scenes");if(!t)throw new Error("Cannot get Canvas Rendering Context from canvas.");this.scenes=new R,this.scenes.ctx=t}}class L{constructor(){s(this,"lastTime",Date.now());s(this,"_elapsedTime",0);s(this,"frames",[]);s(this,"_fps",0);s(this,"_dt",0)}get fps(){return this._fps}get elapsedTime(){return this._elapsedTime}get dt(){return this._dt}reset(){this._elapsedTime=0,this._dt=0}clearFrames(){for(let t=0;t<this.frames.length;t++)this.frames.pop()}updateFPS(){this.frames.push(1/(this._dt===0?1:this._dt));const t=this._elapsedTime+this._dt;if(Math.floor(t)>Math.floor(this._elapsedTime)){const e=this.frames.reduce((i,n)=>i+=n,this.frames[0])/this.frames.length;this._fps=Math.floor(e),this.clearFrames()}}update(){const t=Date.now();this._dt=(t-this.lastTime)/1e3,this._dt>2&&(this._dt=0),this.lastTime=t,this.updateFPS(),this._elapsedTime+=this.dt}}class P extends y{constructor(e){super(e);s(this,"fillColor","black");s(this,"strokeColor","black");s(this,"width",50);s(this,"height",50);s(this,"fill",!0);s(this,"stroke",!0);s(this,"strokeLineWidth",1);s(this,"updateCb",null);if(e){const{fillColor:i,strokeColor:n,height:r,width:h,fill:c,stroke:l,strokeLineWidth:u,updateCb:f}=e;i&&(this.fillColor=i),n&&(this.strokeColor=n),r&&(this.height=r),h&&(this.width=h),typeof c<"u"&&(this.fill=c),typeof l<"u"&&(this.stroke=l),u&&(this.strokeLineWidth=u),f&&(this.updateCb=f)}}render(e){const{x:i,y:n}=this.coordinatesForRender,{width:r,height:h}=this;this.sprite?this.sprite.render(e,this):(e.save(),e.fillStyle=this.fillColor,e.strokeStyle=this.strokeColor,e.lineWidth=this.strokeLineWidth,this.fill&&e.fillRect(i,n,r,h),this.stroke&&e.strokeRect(i,n,r,h),e.restore())}update(e){var i;if(!this.scene)throw new Error("Cannot find scene in entity "+this.id);(i=this.sprite)==null||i.update(e),this.updateCb&&this.updateCb(this,this.scene,e)}}class b{constructor(t,e){s(this,"a");s(this,"b");!t&&!e?(this.a=new d,this.b=new d):(this.a=new d(t),this.b=new d(e))}set(t,e){this.a=new d(t),this.b=new d(e)}zero(){this.a.setCoords(0,0),this.b.setCoords(0,0)}add(t){const{a:e,b:i}=t;this.a.setCoords(this.a.x+e.x,this.a.y+e.y),this.b.setCoords(this.b.x+i.x,this.b.y+i.y)}substract(t){const{a:e,b:i}=t;this.a.setCoords(this.a.x-e.x,this.a.y-e.y),this.b.setCoords(this.b.x-i.x,this.b.y-i.y)}get length(){const{a:t,b:e}=this,i=e.x-t.x,n=e.y-t.y;return Math.sqrt(i**2+n**2)}get normalized(){const t=this.length;return t!==0?{x:(this.b.x-this.a.x)/t,y:(this.b.y-this.a.y)/t}:{x:0,y:0}}}class B extends y{constructor(e){super(e);s(this,"velocity",new b);s(this,"acceleration",new b);s(this,"_isGrounded",!1)}get isGrounded(){return this._isGrounded}update(e){if(this._isGrounded=this.checkIsGrounded(),this._isGrounded===!1)this.applyGravity(e);else{this.velocity.b.setY(0),this.acceleration.b.setY(0);const i=this.groundedOn();i&&this.position.setY(i.sides.top-this.height)}this.position.addY(this.velocity.b.y),this.position.addX(this.velocity.b.x),this._update&&this._update(e)}groundedOn(){let e=null;for(const i of this.scene.entities.getAllEntities()){if(i.id===this.id)continue;const n=this.predictFuturePosition();if(this.checkWasEntityThroughOtherEntity(i,n)){e=i;break}}return e}checkIsGrounded(){let e=!1;for(const i of this.scene.entities.getAllEntities()){if(i.id===this.id)continue;const n=this.predictFuturePosition();if(this.checkWasEntityThroughOtherEntity(i,n)){e=!0;break}}return e}predictFuturePosition(){const e=this.position.x+this.velocity.b.x,i=this.position.y+this.velocity.b.y;return{x:e,y:i}}checkWasEntityThroughOtherEntity(e,i){const n=e.sides,r={top:this.sides.top+i.y-this.position.y,left:this.sides.left+i.x-this.position.x,right:this.sides.right+i.x-this.position.x,bottom:this.sides.bottom+i.y-this.position.y};return r.bottom>=n.top&&r.top<=n.bottom&&r.left<=n.right&&r.right>=n.left}applyGravity(e){const i=new b;i.b.setY(this.scene.physics.worldGravity*e.dt),this.velocity.add(i)}}class A extends B{constructor(e){super(e);s(this,"fillColor","black");s(this,"strokeColor","black");s(this,"fill",!0);s(this,"stroke",!0);s(this,"strokeLineWidth",1);s(this,"updateCb",null);if(e){const{fillColor:i,strokeColor:n,height:r,width:h,fill:c,stroke:l,strokeLineWidth:u,updateCb:f}=e;i&&(this.fillColor=i),n&&(this.strokeColor=n),r?this.height=r:this.height=50,h?this.width=h:this.width=50,typeof c<"u"&&(this.fill=c),typeof l<"u"&&(this.stroke=l),u&&(this.strokeLineWidth=u),f&&(this.updateCb=f)}}render(e){const{x:i,y:n}=this.coordinatesForRender,{width:r,height:h}=this;this.sprite?this.sprite.render(e,this):(e.save(),e.fillStyle=this.fillColor,e.strokeStyle=this.strokeColor,e.lineWidth=this.strokeLineWidth,this.fill&&e.fillRect(i,n,r,h),this.stroke&&e.strokeRect(i,n,r,h),e.restore())}update(e){var i;if(!this.scene)throw new Error("Cannot find scene in entity "+this.id);super.update(e),(i=this.sprite)==null||i.update(e),this.updateCb&&this.updateCb(this,this.scene,e)}}class G{constructor(t){s(this,"engine");s(this,"canvas");s(this,"ctx");if(!t)throw new Error("Missed argument 'canvas' in Game constructor!");this.canvas=t;const e=t.getContext("2d");if(!e)throw new Error("Cannot get Canvas Rendering Context from canvas.");this.ctx=e,this.engine=new W(this.ctx)}}const w=document.getElementById("canvas");w.height=window.innerHeight;w.width=window.innerWidth;w.style.cssText=`
display: block;
`;const E=new G(w),a=new p(w),m={};window.addEventListener("keydown",o=>{m[o.code]=!0});window.addEventListener("keyup",o=>{m[o.code]=!1});const N=(o,t)=>{var r,h;const{dt:i}=t.timer,n=400*i;m.KeyD===!0&&(o.velocity.b.setX(n),(r=o.sprite)==null||r.flip(!1)),m.KeyA===!0&&((h=o.sprite)==null||h.flip(!0),o.velocity.b.setX(-n)),!m.KeyA&&!m.KeyD&&o.velocity.b.setX(0),m.Space===!0&&o.isGrounded&&o.velocity.b.setY(-4),o.position.y>600&&o.position.setCoords(0,0)},x=new Image;x.src="/canvas_game_engine/assets/sprite.png";const D={uniqueName:"player_runs",img:x,frameHeight:150,frameWidth:130,interval:.032,numberOfFrames:23,numberOfRows:5,numberOfColumns:7},v=new A({initialPosition:{x:0,y:0},height:100,width:100,fill:!1,strokeColor:"black",strokeLineWidth:2,updateCb:N});a.spriteList.addSprite(x,"player_runs");a.entities.addEntity(v);v.setSprite("player_runs",D);a.showFPS(!0);a.camera.trackEntity(v);a.entities.addEntity(new P({initialPosition:{x:0,y:500},width:2e3,height:40,fillColor:"red"}));E.engine.scenes.addScene(a);E.engine.scenes.changeCurrentScene(a);var S;(S=E.engine.scenes.currentScene)==null||S.play();const Z=document.getElementById("dead_zone_button");Z.addEventListener("click",o=>{if(o.preventDefault(),a.camera.deadZone===null){const t={minX:-100,maxX:2100,maxY:1200,minY:0};a.camera.setDeadZone(t)}else a.camera.setDeadZone(null)});
